buildscript {
    ext {
        springBootVersion = '1.2.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 
apply plugin: 'war'


war {
    baseName = 'springstarter'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    // for web
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    
    // for security/oauth2
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    //compile("org.springframework.security.oauth:spring-security-oauth2:2.0.7.RELEASE")
    
    // for jpa
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.mariadb.jdbc:mariadb-java-client:1.1.8")
    
    // for transaction
    //compile("org.aspectj:aspectjweaver:1.8.4")
    //compile("cglib:cglib-nodep:3.1")
    
    // for jstl & taglib
    compile("javax.servlet:jstl:1.2")
    compile("org.springframework.security:spring-security-taglibs")
    
    // for testing
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test") 
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
